Sample code for Chapter 9 - "Pythonic objects"

From the book "Fluent Python" by Luciano Ramalho (O'Reilly, 2015)
http://shop.oreilly.com/product/0636920032519.do

vector2d_*.py
=============

NumPy という便利なものがあるので一般プログラマーはこういうコードを書かないで済む。

* ダブルアンダースコア系メソッドの実装方法の参考になる。
* ``__repr__()`` の実装方針はだいじ。

  * クラス名は ``type(self).__name__`` で得るのがよい。

* ``__bytes__()`` は何に使われるのか。

  * あとでクラスメソッド ``frombytes()`` を提供するときに関係してくる。
    クラスメソッドは ``@classmethod`` で修飾する。

* ``__eq__()`` の実装は微妙なところがある。
* ``__abs__()`` では例によって ``math.hypot()`` を利用する。
* ``__bool__()`` は零ベクトルかどうかを判定するようだ。
* クラスメソッド ``frombytes()`` でバイト列？からオブジェクトを生成する。
  これは特殊なので後回し。
* メソッド ``angle()`` 実装。二次元ベクトルなので ``math.atan2()`` を利用する。
  この引数の順序は C/C++ と同じで y, x の順であることを憶えておく。
* ``__format__()`` の実装例として参考になる。

* ``__slots__`` によりオブジェクトのサイズを必要最小限に抑える。
  * その関係で ``.x``, ``.y`` を ``@property`` に変更。

* ``__hash__()`` を実装。よくわからない値を返す。
* ``__init__()`` で各成分を明示的に ``float()`` で浮動小数点数に変換しておく。

memtest.py
==========

残念だが標準モジュール ``resource`` は UNIX 固有のものだ。私は試せない。

private/
========

Java 絡みのようなので見ない。

以上
